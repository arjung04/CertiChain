{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arjun\\\\Desktop\\\\CertiChain\\\\frontend\\\\src\\\\components\\\\VerifyCertificate.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, TextField, Button, Typography, Alert, CircularProgress } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VerifyCertificate = () => {\n  _s();\n  const [certificateID, setCertificateID] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [result, setResult] = useState(null);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true);\n    setResult(null);\n    try {\n      const response = await fetch(`http://localhost:5000/verify_certificate?certificate=${certificateID}`);\n      if (!response.ok) {\n        throw new Error('Verification failed');\n      }\n      const data = await response.json();\n      setResult(data.valid ? 'Certificate is valid!' : 'Certificate is invalid.');\n    } catch (error) {\n      setResult('Error verifying certificate. Please try again.');\n      console.error('Error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      maxWidth: 500,\n      margin: 'auto',\n      mt: 5,\n      p: 3,\n      border: '1px solid #ccc',\n      borderRadius: 2,\n      boxShadow: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h4\",\n      sx: {\n        mb: 2,\n        textAlign: 'center'\n      },\n      children: \"Verify Certificate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Certificate ID\",\n        value: certificateID,\n        onChange: e => setCertificateID(e.target.value),\n        fullWidth: true,\n        required: true,\n        sx: {\n          mb: 2\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        variant: \"contained\",\n        color: \"primary\",\n        fullWidth: true,\n        disabled: isLoading,\n        children: isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24,\n          color: \"inherit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 24\n        }, this) : 'Verify Certificate'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(Alert, {\n      severity: result.includes('valid') ? 'success' : 'error',\n      sx: {\n        mt: 2\n      },\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(VerifyCertificate, \"9FMqfHUmLYHtT8M9lPm+ygeAMlU=\");\n_c = VerifyCertificate;\nexport default VerifyCertificate;\nvar _c;\n$RefreshReg$(_c, \"VerifyCertificate\");","map":{"version":3,"names":["React","useState","Box","TextField","Button","Typography","Alert","CircularProgress","jsxDEV","_jsxDEV","VerifyCertificate","_s","certificateID","setCertificateID","isLoading","setIsLoading","result","setResult","handleSubmit","e","preventDefault","response","fetch","ok","Error","data","json","valid","error","console","sx","maxWidth","margin","mt","p","border","borderRadius","boxShadow","children","variant","mb","textAlign","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","value","onChange","target","fullWidth","required","type","color","disabled","size","severity","includes","_c","$RefreshReg$"],"sources":["C:/Users/Arjun/Desktop/CertiChain/frontend/src/components/VerifyCertificate.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, TextField, Button, Typography, Alert, CircularProgress } from '@mui/material';\r\n\r\nconst VerifyCertificate = () => {\r\n  const [certificateID, setCertificateID] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [result, setResult] = useState(null);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setResult(null);\r\n\r\n    try {\r\n      const response = await fetch(`http://localhost:5000/verify_certificate?certificate=${certificateID}`);\r\n      if (!response.ok) {\r\n        throw new Error('Verification failed');\r\n      }\r\n\r\n      const data = await response.json();\r\n      setResult(data.valid ? 'Certificate is valid!' : 'Certificate is invalid.');\r\n    } catch (error) {\r\n      setResult('Error verifying certificate. Please try again.');\r\n      console.error('Error:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box\r\n      sx={{\r\n        maxWidth: 500,\r\n        margin: 'auto',\r\n        mt: 5,\r\n        p: 3,\r\n        border: '1px solid #ccc',\r\n        borderRadius: 2,\r\n        boxShadow: 3,\r\n      }}\r\n    >\r\n      <Typography variant=\"h4\" sx={{ mb: 2, textAlign: 'center' }}>\r\n        Verify Certificate\r\n      </Typography>\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <TextField\r\n          label=\"Certificate ID\"\r\n          value={certificateID}\r\n          onChange={(e) => setCertificateID(e.target.value)}\r\n          fullWidth\r\n          required\r\n          sx={{ mb: 2 }}\r\n        />\r\n\r\n        <Button\r\n          type=\"submit\"\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          fullWidth\r\n          disabled={isLoading}\r\n        >\r\n          {isLoading ? <CircularProgress size={24} color=\"inherit\" /> : 'Verify Certificate'}\r\n        </Button>\r\n      </form>\r\n\r\n      {result && (\r\n        <Alert severity={result.includes('valid') ? 'success' : 'error'} sx={{ mt: 2 }}>\r\n          {result}\r\n        </Alert>\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default VerifyCertificate;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}