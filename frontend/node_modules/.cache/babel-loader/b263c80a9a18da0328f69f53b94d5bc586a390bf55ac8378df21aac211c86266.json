{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arjun\\\\Desktop\\\\CertiChain\\\\frontend\\\\src\\\\components\\\\UploadCertificate.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadCertificate = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    owner: '',\n    institution: '',\n    certificate: ''\n  });\n  const [isLoading, setIsLoading] = useState(false); // Loading state\n  const [errorMessage, setErrorMessage] = useState(null); // Error message\n  const [successMessage, setSuccessMessage] = useState(null); // Success message\n\n  // Handle input changes\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Handle form submission\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setIsLoading(true); // Start loading\n    setErrorMessage(null); // Reset error message\n    setSuccessMessage(null); // Reset success message\n\n    try {\n      // Log formData for debugging\n      console.log('Submitting form data:', formData);\n\n      // Make API request\n      const response = await fetch('http://localhost:5000/add_certificate', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(formData)\n      });\n\n      // Check for HTTP errors\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setSuccessMessage(data.message); // Display success message\n    } catch (error) {\n      console.error('Error uploading certificate:', error);\n      setErrorMessage('Failed to upload certificate. Please try again.');\n    } finally {\n      setIsLoading(false); // Stop loading\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Upload Certificate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"owner\",\n        placeholder: \"Owner\",\n        value: formData.owner,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"institution\",\n        placeholder: \"Institution\",\n        value: formData.institution,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"certificate\",\n        placeholder: \"Certificate\",\n        value: formData.certificate,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: isLoading,\n        children: isLoading ? 'Uploading...' : 'Upload Certificate'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 24\n    }, this), successMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'green'\n      },\n      children: successMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadCertificate, \"dVmLwq5DueEqiQVEvNSChwkl4pY=\");\n_c = UploadCertificate;\nexport default UploadCertificate;\nvar _c;\n$RefreshReg$(_c, \"UploadCertificate\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadCertificate","_s","formData","setFormData","owner","institution","certificate","isLoading","setIsLoading","errorMessage","setErrorMessage","successMessage","setSuccessMessage","handleChange","e","target","name","value","handleSubmit","preventDefault","console","log","response","fetch","method","headers","body","JSON","stringify","ok","Error","status","data","json","message","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","onChange","required","disabled","style","color","_c","$RefreshReg$"],"sources":["C:/Users/Arjun/Desktop/CertiChain/frontend/src/components/UploadCertificate.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst UploadCertificate = () => {\r\n  const [formData, setFormData] = useState({\r\n    owner: '',\r\n    institution: '',\r\n    certificate: '',\r\n  });\r\n  const [isLoading, setIsLoading] = useState(false); // Loading state\r\n  const [errorMessage, setErrorMessage] = useState(null); // Error message\r\n  const [successMessage, setSuccessMessage] = useState(null); // Success message\r\n\r\n  // Handle input changes\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Handle form submission\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true); // Start loading\r\n    setErrorMessage(null); // Reset error message\r\n    setSuccessMessage(null); // Reset success message\r\n\r\n    try {\r\n      // Log formData for debugging\r\n      console.log('Submitting form data:', formData);\r\n\r\n      // Make API request\r\n      const response = await fetch('http://localhost:5000/add_certificate', {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(formData),\r\n      });\r\n\r\n      // Check for HTTP errors\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      setSuccessMessage(data.message); // Display success message\r\n    } catch (error) {\r\n      console.error('Error uploading certificate:', error);\r\n      setErrorMessage('Failed to upload certificate. Please try again.');\r\n    } finally {\r\n      setIsLoading(false); // Stop loading\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Upload Certificate</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"owner\"\r\n          placeholder=\"Owner\"\r\n          value={formData.owner}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"institution\"\r\n          placeholder=\"Institution\"\r\n          value={formData.institution}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          name=\"certificate\"\r\n          placeholder=\"Certificate\"\r\n          value={formData.certificate}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\" disabled={isLoading}>\r\n          {isLoading ? 'Uploading...' : 'Upload Certificate'}\r\n        </button>\r\n      </form>\r\n      {errorMessage && <p style={{ color: 'red' }}>{errorMessage}</p>}\r\n      {successMessage && <p style={{ color: 'green' }}>{successMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UploadCertificate;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}