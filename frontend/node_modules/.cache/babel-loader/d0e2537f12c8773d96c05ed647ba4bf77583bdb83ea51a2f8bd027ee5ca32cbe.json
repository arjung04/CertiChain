{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Arjun\\\\Desktop\\\\CertiChain\\\\frontend\\\\src\\\\components\\\\UploadCertificate.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UploadCertificate = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    owner: '',\n    institution: '',\n    certificate: ''\n  });\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const response = await fetch('http://localhost:5000/add_certificate', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(formData)\n    });\n    const data = await response.json();\n    alert(data.message);\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"owner\",\n      placeholder: \"Owner\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"institution\",\n      placeholder: \"Institution\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"certificate\",\n      placeholder: \"Certificate\",\n      onChange: handleChange,\n      required: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Upload Certificate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(UploadCertificate, \"uQ6XA6bwQZoIcrRI4IHhA+jYDak=\");\n_c = UploadCertificate;\nexport default UploadCertificate;\nvar _c;\n$RefreshReg$(_c, \"UploadCertificate\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","UploadCertificate","_s","formData","setFormData","owner","institution","certificate","handleChange","e","target","name","value","handleSubmit","preventDefault","response","fetch","method","headers","body","JSON","stringify","data","json","alert","message","onSubmit","children","type","placeholder","onChange","required","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Arjun/Desktop/CertiChain/frontend/src/components/UploadCertificate.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst UploadCertificate = () => {\r\n  const [formData, setFormData] = useState({\r\n    owner: '',\r\n    institution: '',\r\n    certificate: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const response = await fetch('http://localhost:5000/add_certificate', {\r\n      method: 'POST',\r\n      headers: { 'Content-Type': 'application/json' },\r\n      body: JSON.stringify(formData),\r\n    });\r\n    const data = await response.json();\r\n    alert(data.message);\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type=\"text\" name=\"owner\" placeholder=\"Owner\" onChange={handleChange} required />\r\n      <input type=\"text\" name=\"institution\" placeholder=\"Institution\" onChange={handleChange} required />\r\n      <input type=\"text\" name=\"certificate\" placeholder=\"Certificate\" onChange={handleChange} required />\r\n      <button type=\"submit\">Upload Certificate</button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default UploadCertificate;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExC,MAAMC,iBAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC;IACvCO,KAAK,EAAE,EAAE;IACTC,WAAW,EAAE,EAAE;IACfC,WAAW,EAAE;EACf,CAAC,CAAC;EAEF,MAAMC,YAAY,GAAIC,CAAC,IAAK;IAC1BL,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACM,CAAC,CAACC,MAAM,CAACC,IAAI,GAAGF,CAAC,CAACC,MAAM,CAACE;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,YAAY,GAAG,MAAOJ,CAAC,IAAK;IAChCA,CAAC,CAACK,cAAc,CAAC,CAAC;IAClB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,uCAAuC,EAAE;MACpEC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAClB,QAAQ;IAC/B,CAAC,CAAC;IACF,MAAMmB,IAAI,GAAG,MAAMP,QAAQ,CAACQ,IAAI,CAAC,CAAC;IAClCC,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC;EACrB,CAAC;EAED,oBACEzB,OAAA;IAAM0B,QAAQ,EAAEb,YAAa;IAAAc,QAAA,gBAC3B3B,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACjB,IAAI,EAAC,OAAO;MAACkB,WAAW,EAAC,OAAO;MAACC,QAAQ,EAAEtB,YAAa;MAACuB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvFnC,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACjB,IAAI,EAAC,aAAa;MAACkB,WAAW,EAAC,aAAa;MAACC,QAAQ,EAAEtB,YAAa;MAACuB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnGnC,OAAA;MAAO4B,IAAI,EAAC,MAAM;MAACjB,IAAI,EAAC,aAAa;MAACkB,WAAW,EAAC,aAAa;MAACC,QAAQ,EAAEtB,YAAa;MAACuB,QAAQ;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACnGnC,OAAA;MAAQ4B,IAAI,EAAC,QAAQ;MAAAD,QAAA,EAAC;IAAkB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7C,CAAC;AAEX,CAAC;AAACjC,EAAA,CA9BID,iBAAiB;AAAAmC,EAAA,GAAjBnC,iBAAiB;AAgCvB,eAAeA,iBAAiB;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}